#!/bin/bash

set -euo pipefail

return_code=1
debug_mode=1
install_mode=1
install_version="${BUILDKITE_PLUGIN_SKAFFOLD_VERSION:-latest}"
skaffold="skaffold" # assume it is in the path by default
skaffold_args=""
build_artifact="skaffold-images.json"

function cleanup {
  echo skaffold ${BUILDKITE_PLUGIN_SKAFFOLD_COMMAND} end
}
trap cleanup EXIT

function skaffold_install {
  skaffold_path="${HOME}/bin/skaffold.${install_version}"
  [[ ! -d "${HOME}/bin" ]] && mkdir ${HOME}/bin
  if [[ ! -x "${skaffold_path}" ]]
  then
    echo "install skaffold version ${install_version}"
    curl -fLo ${skaffold_path} \
    https://storage.googleapis.com/skaffold/releases/${install_version}/skaffold-linux-amd64 \
    && chmod +x ${skaffold_path}
    skaffold="${skaffold_path}"
    echo -n "installed skaffold version: "
  else
    echo -n "existing skaffold version: "
  fi
  echo $(${skaffold} version)
}

function skaffold_build {
  ${skaffold} build --file-output=${build_artifact} ${skaffold_args}
  echo build artifact:
  cat ${build_artifact}
  buildkite-agent artifact upload ${build_artifact}
}

function skaffold_deploy {
  buildkite-agent artifact download ${build_artifact}
  echo build artifact:
  cat ${build_artifact}
  ${skaffold} deploy --build-artifacts=${build_artifact} ${skaffold_args}
}

# main
if [[ "${BUILDKITE_PLUGIN_SKAFFOLD_DEBUG:-false}" =~ (true|on|1) ]] ; then
  echo "skaffold: debug mode on."
  debug_mode=0
  set -x
fi

if [[ "${BUILDKITE_PLUGIN_SKAFFOLD_INSTALL:-false}" =~ (true|on|1) ]] ; then
  echo "skaffold: install mode on."
  install_mode=0
fi

if [[ -z "${BUILDKITE_PLUGIN_SKAFFOLD_COMMAND:-}" ]] ; then
  echo "skaffold: required property command is not set."
  exit 1
fi

if [[ "${BUILDKITE_PLUGIN_SKAFFOLD_PROFILE:-unset}" != "unset" ]] ; then
  echo "skaffold: using profile ${BUILDKITE_PLUGIN_SKAFFOLD_PROFILE}"
  skaffold_args+=" -p ${BUILDKITE_PLUGIN_SKAFFOLD_PROFILE}"
fi

if [[ $install_mode ]] ; then
  skaffold_install
fi

case "${BUILDKITE_PLUGIN_SKAFFOLD_COMMAND}" in
  build)
    echo
    echo "--- :k8s: skaffold ${BUILDKITE_PLUGIN_SKAFFOLD_COMMAND}"
    skaffold_build
    ;;
  deploy)
    echo
    echo "--- :k8s: skaffold ${BUILDKITE_PLUGIN_SKAFFOLD_COMMAND}"
    skaffold_deploy
    ;;
  *)
    echo "skaffold: unsupported command provided: ${BUILDKITE_PLUGIN_SKAFFOLD_COMMAND}"
    exit 1
    ;;
esac

return_code=$?

exit $return_code
